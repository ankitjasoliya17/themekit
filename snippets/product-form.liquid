{%- comment -%}
Those are the option names for which we automatically detect swatch. For the color, we use them to display a swatch, while
for size, we use it to display a size chart (if applicable)
{%- endcomment -%}

{%- assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' -%}
{%- assign size_label = 'size,taille,bröße,tamanho,tamaño,koko,サイズ' | split: ',' -%}

{%- assign size_chart_page = '' -%}
{%- assign product_popovers = '' -%}

{%- assign selected_variant = product.selected_or_first_available_variant -%}

{%- form 'product', product, class: 'ProductForm' -%}
  <div class="ProductForm__Variants">
    {%- unless product.has_only_default_variant -%}
      {%- for option in product.options_with_values -%}
        {%- assign downcase_option = option.name | downcase -%}
        {%- capture popover_id -%}popover-{{ product.id }}-{{ section.id }}-{{ option.name | handle }}{%- endcapture -%}

        {%- if section.settings.show_color_swatch and color_label contains downcase_option -%}
          {%- assign is_option_with_color_swatch = true -%}
        {%- else -%}
          {%- assign is_option_with_color_swatch = false -%}
        {%- endif -%}

        <div class="ProductForm__Option">
          <button type="button" class="ProductForm__Item" aria-expanded="false" aria-controls="{{ popover_id }}">
            {%- if is_option_with_color_swatch -%}
              {%- assign downcase_value = option.selected_value | downcase -%}

              <span class="ProductForm__ColorSwatch {% if downcase_value == 'white' %}ProductForm__ColorSwatch--white{% endif %}" style="background-color: {{ option.selected_value | replace: ' ', '' }}; background-image: url({{ option.selected_value | handle | append: '.png' | asset_url }})"></span>
              <span class="ProductForm__SelectedValue">{{ option.selected_value }}</span>
              <span class="ProductForm__OptionCount Text--subdued">{{ 'product.form.colors_count' | t: count: option.values.size }}</span>
            {%- else -%}
              <span class="ProductForm__OptionName">{{ option.name }}: <span class="ProductForm__SelectedValue">{{ option.selected_value }}</span></span>
            {%- endif -%}

            {%- include 'icon' with 'select-arrow' -%}
          </button>

          {%- capture popover_html -%}
            {%- if color_label contains downcase_option and section.settings.show_color_carousel -%}
              {%- for value in option.values -%}
                {%- if value == option.selected_value -%}
                  {%- assign initial_image_index = forloop.index0 -%}
                  {%- break -%}
                {%- endif -%}
              {%- endfor -%}

              {%- capture flickity_options -%}
              {
                "prevNextButtons": true,
                "pageDots": true,
                "initialIndex": {{ initial_image_index }},
                "arrowShape": {"x0": 20, "x1": 60, "y1": 40, "x2": 60, "y2": 35, "x3": 25}
              }
              {%- endcapture -%}

              <div id="{{ popover_id }}" class="VariantSelector" aria-hidden="true">
                {%- capture option_index -%}option{{ option.position }}{%- endcapture -%}

                <div class="VariantSelector__Carousel Carousel" data-flickity-config='{{ flickity_options }}'>
                  {%- for value in option.values -%}
                    {%- for variant in product.variants -%}
                      {%- if variant[option_index] == value -%}
                        {%- assign variant_image = variant.image | default: product.featured_image -%}
                        {%- break -%}
                      {%- endif -%}
                    {%- endfor -%}

                    <div class="VariantSelector__Item Carousel__Cell {% if value == option.selected_value %}is-selected{% endif %}"
                         {% if is_option_with_color_swatch %}
                           data-background-color="{{ value | split: ' ' | last | handle }}"
                           data-background-image="{{ value | handle | append: '.png' | asset_url }}"
                         {% endif %}
                         data-option-position="{{ option.position }}"
                         data-option-value="{{ value | escape }}">
                      <div class="VariantSelector__ImageWrapper AspectRatio AspectRatio--withFallback" style="max-width: {{ variant_image.width }}px; padding-bottom: {{ 100.0 | divided_by: variant_image.aspect_ratio }}%; --aspect-ratio: {{ variant_image.aspect_ratio }}">
                        {%- include 'image-size', sizes: '200,400,600,800', image: variant_image -%}
                        {%- assign image_url = variant_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                        <img class="VariantSelector__Image Image--lazyLoad Image--fadeIn" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" alt="{{ variant_image.alt | escape }}">
                        <span class="Image__Loader"></span>
                      </div>
                    </div>
                  {%- endfor -%}
                </div>

                <div class="VariantSelector__Info">
                  <div class="VariantSelector__ChoiceList">
                    {%- for value in option.values -%}
                      {%- assign available_prices_for_option_value = '' -%}

                      {%- for variant in product.variants -%}
                        {%- if variant[option_index] == value -%}
                          {%- assign available_prices_for_option_value = available_prices_for_option_value | append: variant.price | append: ',' -%}
                        {%- endif -%}
                      {%- endfor -%}

                      {%- assign available_prices_for_option_value = available_prices_for_option_value | split: ',' | compact | uniq | sort -%}

                      <div class="VariantSelector__Choice {% if value == option.selected_value %}is-selected{% endif %}">
                        <div class="VariantSelector__ChoiceColor">
                          {%- if is_option_with_color_swatch -%}
                            {%- assign downcase_value = value | downcase -%}
                            <span class="VariantSelector__ColorSwatch {% if downcase_value == 'white' %}VariantSelector__ColorSwatch--white{% endif %}" style="background-color: {{ value | replace: ' ', '' }}; background-image: url({{ value | handle | append: '.png' | asset_url }})"></span>
                          {%- endif -%}

                          <span class="VariantSelector__ChoiceValue">{{ value }}</span>
                        </div>

                        <div class="VariantSelector__ChoicePrice">
                          {%- if available_prices_for_option_value.size > 1 -%}
                            {%- capture formatted_min_price -%}<span data-money-convertible>{{ available_prices_for_option_value.first | money_without_trailing_zeros }}</span>{%- endcapture -%}
                            {%- capture formatted_max_price -%}<span data-money-convertible>{{ available_prices_for_option_value.last | money_without_trailing_zeros }}</span>{%- endcapture -%}
                            <span class="Heading Text--subdued">{{ 'product.form.from_price_html' | t: min_price: formatted_min_price, max_price: formatted_max_price }}</span>
                          {%- else -%}
                            <span class="Heading Text--subdued" data-money-convertible>{{ available_prices_for_option_value.first | money_without_trailing_zeros }}</span>
                          {%- endif -%}
                        </div>
                      </div>
                    {%- endfor -%}
                  </div>

                  <button type="button" class="VariantSelector__Button Button Button--primary Button--full" data-action="select-variant">{{- 'product.form.select_model' | t -}}</button>
                </div>
              </div>
            {%- else -%}
              <div id="{{ popover_id }}" class="OptionSelector Popover Popover--withMinWidth" aria-hidden="true">
                <header class="Popover__Header">
                  <button type="button" class="Popover__Close Icon-Wrapper--clickable" data-action="close-popover">{% include 'icon' with 'close' %}</button>
                  <span class="Popover__Title Heading u-h4">{{ option.name | escape }}</span>
                </header>

                <div class="Popover__Content">
                  <div class="Popover__ValueList" data-scrollable>
                    {%- for value in option.values -%}
                      <button type="button" class="Popover__Value {% if value == option.selected_value %}is-selected{% endif %} Heading Link Link--primary u-h6"
                              data-value="{{ value | escape }}"
                              data-option-position="{{ option.position }}"
                              {% if is_option_with_color_swatch %}
                                data-background-color="{{ value | replace: ' ', '' }}"
                                data-background-image="{{ value | handle | append: '.png' | asset_url }}"
                              {% endif %}
                              data-action="select-value">
                        {{- value | escape -}}
                      </button>
                    {%- endfor -%}
                  </div>

                  {%- assign size_chart_page_handle = settings.size_chart_page | default: 'size-chart' -%}
                  {%- assign size_chart_page = pages[size_chart_page_handle] -%}

                  {%- if size_label contains downcase_option and size_chart_page != empty -%}
                    <button type="button" class="Popover__FooterHelp Heading Link Link--primary Text--subdued u-h6" data-action="open-modal" aria-controls="modal-{{ size_chart_page.handle }}">
                      {{- 'product.form.size_chart' | t -}}
                    </button>
                  {%- endif -%}
                </div>
              </div>
            {%- endif -%}
          {%- endcapture -%}

          {%- assign product_popovers = product_popovers | append: popover_html -%}
        </div>
      {%- endfor -%}

      <div class="no-js ProductForm__Option">
        <div class="Select Select--primary">
          {%- include 'icon' with 'select-arrow' -%}

          <select id="product-select-{{ product.id }}" name="id" title="Variant">
            {%- for variant in product.variants -%}
              <option {% if variant == selected_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }} - {{ variant.price | money }}</option>
            {%- endfor -%}
          </select>
        </div>
      </div>
    {%- else -%}
      <input type="hidden" name="id" data-sku="{{ selected_variant.sku }}" value="{{ selected_variant.id }}">
    {%- endunless -%}

    {%- if section.settings.show_quantity_selector -%}
      <div class="ProductForm__QuantitySelector">
        <div class="QuantitySelector QuantitySelector--large">
          {%- assign quantity_minus_one = line_item.quantity | minus: 1 -%}

          <span class="QuantitySelector__Button Link Link--secondary" data-action="decrease-quantity">{% include 'icon' with 'minus' %}</span>
          <input type="text" class="QuantitySelector__CurrentQuantity" pattern="[0-9]*" name="quantity" value="1">
          <span class="QuantitySelector__Button Link Link--secondary" data-action="increase-quantity">{% include 'icon' with 'plus' %}</span>
        </div>
      </div>
    {%- else -%}
      <input type="hidden" name="quantity" value="1">
    {%- endif -%}

    {%- if section.settings.show_inventory_quantity -%}
      {%- assign hide_inventory_quantity_by_default = false -%}
      
      {%- if selected_variant.inventory_management == blank or selected_variant.inventory_quantity <= 0 -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      {%- if section.settings.inventory_quantity_threshold != 0 and selected_variant.inventory_quantity > section.settings.inventory_quantity_threshold -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      <p class="ProductForm__Inventory Text--subdued" {% if hide_inventory_quantity_by_default %}style="display: none"{% endif %}>
        {%- if section.settings.inventory_quantity_threshold == 0 -%}
          {{- 'product.form.inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- else -%}
          {{- 'product.form.low_inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- endif -%}
      </p>
    {%- endif -%}
  </div>

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  ADD TO CART BUTTON
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <button type="submit" class="ProductForm__AddToCart Button {% if selected_variant.available and section.settings.show_payment_button == false %}Button--primary{% else %}Button--secondary{% endif %} Button--full" {% if selected_variant.available %}data-action="add-to-cart"{% else %}disabled="disabled"{% endif %}>
    {%- if selected_variant.available -%}
      <span>{% if product.template_suffix == 'pre-order' %}{{ 'product.form.pre_order' | t }}{% else %}{{ 'product.form.add_to_cart' | t }}{% endif %}</span>
      <span class="Button__SeparatorDot"></span>
      <span data-money-convertible>{{ selected_variant.price | money_without_trailing_zeros }}</span>
    {%- else -%}
      {{- 'product.form.sold_out' | t -}}
    {%- endif -%}
  </button>
	<br>
	<button id="myBtn" type="button" class="Button {% if selected_variant.available and section.settings.show_payment_button == false %}Button--primary{% else %}Button--secondary{% endif %} Button--full" {% if selected_variant.available %}{% else %}disabled="disabled"{% endif %}>
    {%- if selected_variant.available -%}
      <span>{% if product.template_suffix == 'pre-order' %}{{ 'product.form.pre_order' | t }}{% else %}COD{% endif %}</span>
      <span class="Button__SeparatorDot"></span>
      <span data-money-convertible>{{ selected_variant.price | money_without_trailing_zeros }}</span>
    {%- else -%}
      {{- 'product.form.sold_out' | t -}}
    {%- endif -%}
  </button>

  {%- if section.settings.show_payment_button and product.template_suffix != 'pre-order' -%}
    {{ form | payment_button }}
  {%- endif -%}
{%- endform -%}

{%- if size_chart_page != empty -%}
  {%- comment -%}If we have a size chart we capture the modal content (it must be displayed outside the form for proper positioning){%- endcomment -%}

  {%- capture product_modals -%}
    <div id="modal-{{ size_chart_page.handle }}" class="Modal Modal--dark Modal--fullScreen Modal--pageContent" aria-hidden="true" role="dialog" data-scrollable>
      <header class="Modal__Header">
        <h2 class="Modal__Title Heading u-h1">{{ size_chart_page.title }}</h2>
      </header>

      <div class="Modal__Content Rte">
        <div class="Container Container--extraNarrow">
          {{- size_chart_page.content -}}
        </div>
      </div>

      <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom data-action="close-modal">{% include 'icon' with 'close' %}</button>
    </div>
  {%- endcapture -%}
{%- endif -%}


 <!-- Load Mapbox from CDN -->
<script src="https://api.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js"></script>

<!-- Promise polyfill script required to use Mapbox GL Geocoder in IE 11 -->
<script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>

<link href="https://api.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css" rel="stylesheet" />
  
<link
    rel="stylesheet"
    href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css"
    type="text/css"
/>


<div class="custom-switcher-content-wrapper">
    
  <div class="custom-switcher-content coordinates-variant">
    <div class="maps-input-group special-input">
<label>Lookup your Location</label>
<div id="search">
    <div id="geocoder" class="geocoder"></div>

<button id="findLocationBtn" type="button" onclick="findLocation()">FIND</button>

</div>
  <p id="noResult" style="color: red;"></p>
  <table id="addressTable"></table>
</div>
<div class="maps-input-group special-group-display">
  
  <div class="line-item-property__field maps-latitude">
    <label for="latitude">Your Coordinates</label>
    <input id="latitude" maxlength="14" type="text" name="properties[Latitude]" value="-8.3692° S">
  </div>
  
  <div class="line-item-property__field maps-longitude">
    <input id="longtitude" maxlength="14" type="text" name="properties[Longitude]" value="115.1383° E">
  </div>
</div>
    
    <div class="special-group-hide">

      <div id="map"></div>
		
            <label class="toggle">
      <input id="map-lock-input" type="checkbox"/>
      <span class="slider">
        Click to
        <span data-text="lock">lock</span>
        <span data-text="unlock">Unlock</span>
        Map
      </span>
    </label> 
<p style="text-align: center; font-size: 10px;">Are you trying to find the coordinates off a location that doesn't have an address? Move the map and tap to drop the pin anywhere.</p>  
  </div>
  </div>
</div>
  
<script>
  
  
  	mapboxgl.accessToken = 'pk.eyJ1IjoiY2xhc3N5Y3VmZiIsImEiOiJja2FwaGxlanAwMmM1MnJyeXczcmdhNjhzIn0.nJxzl11pFdRJ0CvP8vBrbQ';
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [115.1383, -8.3692],
        zoom: 13
    });

    var geocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl
    });

    document.getElementById('geocoder').appendChild(geocoder.onAdd(map));
  
// 	mapboxgl.accessToken = 'pk.eyJ1IjoiY3VzdG9tY3VmZiIsImEiOiJja2FrczA0cXAwbmM2MnR0ZGR1dnljdGx0In0._EkFqlWTPsGRXyxeRebiYg';
// //   	mapboxgl.accessToken = 'pk.eyJ1IjoiZXhhbXBsZXMiLCJhIjoiY2p0MG01MXRqMW45cjQzb2R6b2ptc3J4MSJ9.zA2W0IkI0c6KaAhJfk9bWg';
//     var marker = new mapboxgl.Marker();
//     var map = new mapboxgl.Map({
//         container: 'map',
//         style: 'mapbox://styles/mapbox/streets-v11',
//         center: [115.1383, -8.3692],
//         zoom: 13
//     });

map.on('load', function () {
      geocoder.query('Bali') // or wherever you want the marker to start
      $("#map").css("pointer-events","none");
    })
function findLocation() {
  document.querySelector('.mapboxgl-ctrl-geocoder--input').id = 'mapbox-search';
  document.querySelector('.suggestions').id = 'suggestionsBox';
  geocoder.query(document.getElementById("mapbox-search").value);
  document.getElementById("suggestionsBox").style.display = 'none';
}

var checkbox = document.getElementById("map-lock-input");

checkbox.addEventListener( 'change', function() {
    if(this.checked) {
        // Checkbox is checked..
$("#map").css("pointer-events","auto");
    } else {
        // Checkbox is not checked..
$("#map").css("pointer-events","none");
    }
});
  
  
  
//  var geocoder = new MapboxGeocoder({
//  accessToken: mapboxgl.accessToken,
//  mode: 'mapbox.places-permanent', // does not provide POI data
//  mapboxgl: mapboxgl
//     });
 geocoder.on('result', function(ev) {
     var latString = ev.result.geometry.coordinates[1];
     var lngString = ev.result.geometry.coordinates[0];
   $('.mapboxgl-ctrl-geocoder--input').blur();
     
 var lat = JSON.stringify(latString);
 var lng = JSON.stringify(lngString);
     
     if (lat > 0) {
		lat = parseFloat(lat).toFixed(4) + "° N";
	} else {
		lat = parseFloat(lat).toFixed(4) + "° S";
	}
	if (lng > 0) {
		lng = parseFloat(lng).toFixed(4) + "° E";
	} else {
		lng = parseFloat(lng).toFixed(4) + "° W";
	}
     console.log(lat);
     console.log(lng);
   localStorage.setItem("cuffCoordinatesLongitude", lng);
   localStorage.setItem("cuffCoordinatesLatitude", lat);
     document.getElementById('latitude').value = lat;
    document.getElementById('longtitude').value = lng;
    });

//  map.on('click', function (e) {
//    console.log(e);
//  if (geocoder.mapMarker) {
//  geocoder.mapMarker.setLngLat(e.lngLat);
// var lat = JSON.stringify(e.lngLat.lat);
// var lng = JSON.stringify(e.lngLat.lng);
//           if (lat > 0) {
// 		lat = parseFloat(lat).toFixed(4) + "° N";
// 	} else {
// 		lat = parseFloat(lat).toFixed(4) + "° S";
// 	}
// 	if (lng > 0) {
// 		lng = parseFloat(lng).toFixed(4) + "° E";
// 	} else {
// 		lng = parseFloat(lng).toFixed(4) + "° W";
// 	}
//      console.log(lat);
//      console.log(lng);
//     localStorage.setItem("cuffCoordinatesLongitude", lng);
//    localStorage.setItem("cuffCoordinatesLatitude", lat);
//      document.getElementById('latitude').value = lat;
//     document.getElementById('longtitude').value = lng;
//         } else {
//           var marker = new geocoder.mapMarker.setLngLat(e.lngLat);
//           console.log('test');
//         }

//     });
  
//   	map.addControl(new mapboxgl.NavigationControl());
//     document.getElementById('geocoder').appendChild(geocoder.onAdd(map));
</script>

<style type="text/css">
html, body { width:100%;padding:0;margin:0; }
.container { width:95%;max-width:980px;padding:1% 2%;margin:0 auto }
#lat, #lon { text-align:right }
  input.mapboxgl-ctrl-geocoder--input {
    margin: 0;
    border: none !important;
    height: 40px;
    font-size: 10px;
    line-height: 20px !important;
}
  .mapboxgl-ctrl-geocoder--icon-close {
    margin-top: 0;
  }
  .mapboxgl-ctrl-geocoder--suggestion {
line-height: normal;
text-align: left;
}
  .mapboxgl-ctrl-geocoder--button {
background: transparent !Important;
width: 30px !Important;
top: 0 !important;
height: 40px !Important;
    line-height: 22px !Important;
}
  .mapboxgl-ctrl-bottom-left, .mapboxgl-ctrl-bottom-right {
display: none;
}
  	div#map {
    width: 100%;
    height: 250px;
    border-radius: 5px;
    overflow:hidden;
}
    #geocoder-container > div {
        min-width: 50%;
        margin-left: 25%;
    }
      div#search {
    display: flex;
              max-width: 650px;
}
div#geocoder {
    width: 80%;
  	z-index: 1000;
}
  @media screen and (min-width: 640px){
.mapboxgl-ctrl-geocoder--icon-close {
margin-top: 0px !important;
}
  }
#search button {
background: black;
    width: 20%;
  	line-height: 42px;
    margin-bottom: 0;
    height: 42px;
    border: 0;
    color: white;
    font-size: 20px;
    font-weight: 600;
    letter-spacing: 1px;
}

input#addressInput {
    width: 80%;
  margin-bottom: 0;
  font-size: 10px !important;
  -webkit-appearance: none;
  text-transform: unset;
  line-height: 20px;
}
  header.coverheader {
    z-index: 9999;
}
  .maps-input-group label {
    display: block;
    line-height: 2.5;
    font-family: "Brandon Medium";
    font-size: 12px;
    font-weight: bold;
    color: #6c6c6c;
    margin-bottom: 0;
    text-align: left;
    text-transform: uppercase;
}
  input#latitude {}

.maps-input-group {
    display: flex;
}

.line-item-property__field.maps-latitude {
    width: calc(50% - 2.5px);
    margin-right: 5px;
}

.line-item-property__field.maps-longitude {
    width: calc(50% - 2.5px);
    margin-top: 30px;
}
    .maps-latitude input, .maps-longitude input {
        width: 100%;
    border: 1px solid #e3e3e3;
    height: 46px;
    line-height: 46px;
    padding: 0;
    margin: 0px;
    max-width: 100%;
    text-indent: 17px;
    outline: none;
        font-size: 16px;
        color: black !important;
    }
    .maps-latitude input::placeholder, .maps-longitude input::placeholder {
        color: black; 
    }

.maps-input-group.special-input {
    display: block;
}
    .mapbox-solution {
    width: 650px;
    margin: 0 auto;
    margin-top: 50px;
}
    .mapboxgl-ctrl-top-right {    top: -125px;
    left: 0px !important;
    right: unset;
    box-sizing: border-box;}

.mapboxgl-ctrl-top-right input {
    border-radius: 0 !important;
}

.mapboxgl-ctrl-geocoder.mapboxgl-ctrl {
    border-radius: 0;
    box-shadow: unset;
    border: 1px solid black;
        margin: 0;
    line-height: 38px;
    box-sizing: border-box;
    max-width: 100%;
    width: 100%;
}
    svg.mapboxgl-ctrl-geocoder--icon.mapboxgl-ctrl-geocoder--icon-search {
    display: none;
}
    .mapboxgl-ctrl-geocoder--input {
    line-height: 40px !important;
    height: 46px;
}
    .mapboxgl-ctrl-geocoder--suggestion {
    line-height: normal;
}
  .mapboxgl-ctrl-top-right {
    top: unset;
    left: 10px !important;
}

.mapboxgl-ctrl-group button {margin: 0 !important;}
  #shopify-section-product-custom-cuff-template .bcpo-buttons .single-option-selector {
    margin-bottom: 0 !important;
}

#shopify-section-product-custom-cuff-template .bcpo-buttons .bcpo-front-button-option:checked + .bcpo-front-button-label {
    background: #e3e3e3;
    color: black;
    font-weight: 500;
    border: 1px solid #e3e3e3;
    border-radius: 0;
    margin-right: 0;
}

#shopify-section-product-custom-cuff-template .bcpo-buttons label.bcpo-front-button-label, #shopify-section-product-custom-cuff-template .bcpo-buttons #bcpo button.bcpo-front-button-label {
    border-radius: 0;
    border: 1px solid #e3e3e3;
  margin: 0 !important;
}
  <!--- Custom Styles Added - 2-in-1 Product Page Visuals - 9. January 2020 --->


.custom-switcher-btn.active-switcher {
    background: #e3e3e3;
}
.custom-switcher-btn {
    text-align: center;
    font-size: 14px;
    text-transform: uppercase;
    float: left;
    padding: 10px 25px;
    border: 1px solid #efefef;
  border-bottom: 0;
    position: relative;
    background: white;
}
.custom-switcher-btn.active-switcher label {
    color: black;
    font-weight: 700;
}

.product-custom-switcher {
margin: 0 auto;
display: inline-block;
overflow: hidden;
position: relative;
margin-bottom: 10px;
}
.custom-switcher-content-wrapper {
    border: 1px solid #e3e3e3;
    padding: 20px;
    position: relative;
    z-index: 100;
  margin-bottom: 20px;
}
  .custom-switcher-btn.active-switcher {
    background: #e3e3e3;
}
  @media screen and (max-width: 600px) {
.custom-switcher-btn {
    text-align: center;
    font-size: 12px;
    text-transform: uppercase;
    float: left;
    padding: 8px;
    border: 1px solid #e3e3e3;
    position: relative;
    background: white;
}
    .custom-switcher-content-wrapper {
    border: 0px solid #e3e3e3;
    padding: 0px;
    position: relative;
    z-index: 100;
}
    .product-custom-switcher {
    width: auto;
    margin-bottom: 20px;
}
    .product-page {
margin-top: 0 !important;
}
}
  .engrave-text-cont label {
        display: block;
    line-height: 2.5;
    font-family: "Brandon Medium";
    font-size: 12px;
    font-weight: bold;
    color: #6c6c6c;
    margin-bottom: 0;
    text-align: left;
    text-transform: uppercase;
  }
#text-engrave {
-webkit-appearance: none;
text-transform: unset;
line-height: 20px;
font-size: 10px;
font-weight: 300;
}
  .up.quantity-control-up {
border-left: none !important;
}
  #text-engrave::placeholder {
    color: #777;
}
  
  
/* Hide default input */
.toggle input {
  display: none;
}

/* The container and background */
.toggle {
  position: relative;
display: block;
width: 150px;
height: 42px;
margin-left: auto;
 margin-right: auto;
margin-bottom: 10px;
margin-top: 10px;
}
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #000;
  border-radius: 21px;
  transition: all 0.4s;
  text-align: center;
width: 100%;
display: block;
color: white;
font-weight: 700;
  font-size: 12px;
padding: 7px 37px;
line-height: 13px;
font-family: "Brandon Medium" !important;
}

/* The sliding button */
.slider:before {
  position: absolute;
  content: "";
  width: 32px;
  height: 32px;
  left: 5px;
  top: 5px;
  background-color: white;
  border-radius: 50%;
  transition: all 0.4s;
}

/* On checked */
input:checked + .slider {
  background-color: #39ca8d;
}
input:checked + .slider:before {
  transform: translateX(108px);
}

  .toggle .slider span[data-text="lock"] {
display: none;
}
  .toggle #map-lock-input:checked+.slider span[data-text="lock"] {
    display: inline;
  }
  .toggle #map-lock-input:checked+.slider span[data-text="unlock"] {
    display: none;
  }
  .toggle .slider span[data-text="lock"], .toggle .slider span[data-text="unlock"] {
font-family: "Brandon Medium" !Important;
font-weight: unset;
}
  .coords-btn, .text-btn {
    background: #efefef !important;
}

.coords-btn {
    margin-right: 10px !important;
}

.text-btn {
    margin-left: 10px !important;
}

.active-switcher {
    font-weight: bold;
    border: 2px solid black !important;
}
p.input-sub {
    text-align: center;
}

input#text-engrave {
  margin-bottom: 10px;
}

</style>





{%- if section.settings.show_payment_button and selected_variant.available == false -%}
  <style>
    #shopify-section-{{ section.id }} .shopify-payment-button {
      display: none;
    }
  </style>
{%- endif -%}

{% comment %}
------------------------------------------------------------------------------
Product Data. This must be outputted for all products (including home page).

IMPORTANT: THIS CODE IS VITAL. DO NOT EDIT IT NOT REMOVE IT. MAKE SURE TO KEEP
THE EXACT SAME ATTRIBUTES.
------------------------------------------------------------------------------
{% endcomment %}

<script type="application/json" data-product-json>
  {
    "product": {{ product | json }},
    "selected_variant_id": {{ selected_variant.id }}
    {%- if section.settings.show_inventory_quantity -%}
      ,"inventories": {
        {%- for variant in product.variants -%}
          {%- assign inventory_message = '' -%}

          {%- if section.settings.inventory_quantity_threshold == 0 -%}
            {%- capture inventory_message -%}{{- 'product.form.inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- else -%}
            {%- capture inventory_message -%}{{- 'product.form.low_inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- endif -%}

          "{{ variant.id }}": {
            "inventory_management": {{ variant.inventory_management | json }},
            "inventory_policy": {{ variant.inventory_policy | json }},
            "inventory_quantity": {{ variant.inventory_quantity | json }},
            "inventory_message": {{ inventory_message | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      }
    {%- endif -%}
  }
</script>



<!-- The Modal -->
<div id="myModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content" style="text-align:center;">
    
    <form id=cod_order_form>
      <div class="form-group">
        <span>First Name</span>
        <input type="text" class="form-control" name="firstname" id="firstname">
      </div>
		<br>
      <div class="form-group">
        <span>Last Name</span>
        <input type="text" class="form-control" name="lastname" id="lastname">
      </div>
		<br>
      <div class="form-group">
        <span>Phone</span>
        <input type="text" class="form-control" name="phone" id="phone">
      </div>
      
		<br>
      <div class="form-group">
        <span>Email</span>
        <input type="email" class="form-control" name="email" id="email">
      </div>
		<br>
      <div class="form-group">
        <span>Address</span>
        <textarea class="form-control" name="address" id="address"></textarea>
      </div>
		<br>
      <div class="form-group">
        <span>City</span>
        <input type="text" class="form-control" name="city" id="city">
      </div>
      <input type="hidden" name="varient_id" value="" id="varient_id">
      <br>
      <div class="form-group">
        <button type="button" class="form-control" name="submit" value="Submit" id="Cod_Order_submit">Submit</button>
      </div>
      
    </form>	
    
  </div>

</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<style>
  body {font-family: Arial, Helvetica, sans-serif;}

/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  padding-top: 100px; /* Location of the box */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
}

/* The Close Button */
.close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}
</style>

<script>
// Get the modal
var modal = document.getElementById("myModal");

// Get the button that opens the modal
var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal 
btn.onclick = function() {
  modal.style.display = "block";
  var getvarientid = $("select[name=id]").val();
  document.getElementById("varient_id").value = getvarientid;
}

// When the user clicks on <span> (x), close the modal
// span.onclick = function() {
//   modal.style.display = "none";
// }

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}


$('document').ready(function(){
  setTimeout(function(){
  	$('#Cod_Order_submit').click(function(){
    var formdata = $('#cod_order_form').serialize();
    var url = 'https://apps.dotmagicinfotech.com/order/createorder.php';

    $.ajax({
      url:url,
      type:"POST",
      async:false,
      data:formdata,
      success:function(result){
        console.log(result);
      }
    });
  });
  },1000)
});

</script>
